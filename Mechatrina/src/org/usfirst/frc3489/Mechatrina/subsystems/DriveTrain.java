// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3489.Mechatrina.subsystems;

import org.usfirst.frc3489.Mechatrina.Robot;
import org.usfirst.frc3489.Mechatrina.RobotMap;
import org.usfirst.frc3489.Mechatrina.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	SpeedController fR = RobotMap.driveTrainFR;
	SpeedController fL = RobotMap.driveTrainFL;
	SpeedController bL = RobotMap.driveTrainBL;
	SpeedController bR = RobotMap.driveTrainBR;
    RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;
    Gyro gyroscope = RobotMap.driveTrainGyroscope;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        setDefaultCommand(new DefaultMecanumManMode());
    }
    public void MecanumMan(Joystick jStick){
    	robotDrive.setMaxOutput(Robot.globalVariables.driveMultiplier); //added drive multiplier to the code for drive so a slowdown button could be used.
    	double angle;
    	if (Robot.globalVariables.gyroState == true) {
    		angle = gyroscope.getAngle();
    	} else {
    		angle = 0;
    	}
    	//angle = gyroscope.getAngle();
    	//gyroscope.initGyro();
    	//robotDrive.mecanumDrive_Cartesian(jStick.getX(), jStick.getY(), jStick.getZ(), angle);
    	robotDrive.mecanumDrive_Cartesian(jStick.getX(), jStick.getY(), jStick.getZ(), angle); 

    }
    
    public void AutonomousDrive(double x, double y, double rotation){
    	//robotDrive.mecanumDrive_Cartesian(x, y, rotation, gyroscope.getAngle());
    	robotDrive.mecanumDrive_Cartesian(x, y, rotation, 0);
    }
    
    public void gyroReset() {
    	gyroscope.reset();
    }
   
}

